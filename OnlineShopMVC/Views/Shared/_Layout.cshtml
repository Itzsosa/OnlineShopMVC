<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - VintiStore</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/OnlineShopMVC.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
</head>

<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">VintiStore</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <!-- Left-aligned navigation links -->
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                        </li>

                        @if (User.Identity.IsAuthenticated && !User.IsInRole("Admin"))
                        {
                            <li class="nav-item">
                                <!-- Opción del carrito de compras en el menú -->
                                <a class="nav-link text-dark" asp-area="" asp-controller="Orders" asp-action="DetailsClient">
                                    <i class="bi bi-file-text"></i>Orders
                                </a>
                            </li>
                        }

                        @* Mostrar los enlaces de administracion solo si el usuario está autenticado y tiene el rol adecuado *@
                        @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                        {
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Users" asp-action="Index">Users</a>
                            </li>

                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Categories" asp-action="Index">Categories</a>
                            </li>

                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Products" asp-action="Index">Products</a>
                            </li>

                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Orders" asp-action="Index">Orders`</a>
                            </li>
                        }
                    </ul>

                    <!-- Right-aligned login/logout and welcome message -->
                    <ul class="navbar-nav">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <li class="nav-item">
                                <span class="nav-link">Welcome, @User.Identity.Name</span>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Users" asp-action="Logout">Logout</a>
                            </li>

                            <a href="@Url.Action("Index", "Carts")" class="btn btn-primary position-relative">
                                <i class="bi bi-cart3"></i>
                                @await Component.InvokeAsync("CartItemCount")
                            </a>
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Users" asp-action="Login">Log In</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Users" asp-action="Register">Register</a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; @DateTime.Now.Year - VintiStore. All Rights Reserved. - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
            <div class="d-inline-block">
                <a href="#" class="text-muted me-2"><i class="bi bi-instagram"></i></a>
                <a href="#" class="text-muted me-2"><i class="bi bi-twitter"></i></a>
                <a href="#" class="text-muted"><i class="bi bi-facebook"></i></a>
            </div>
        </div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
    
    <script>
        async function updateCartCount() {
            try {
                const response = await fetch('@Url.Action("GetCartItemCount", "Carts")');
                const count = await response.json();

                const cartCountElement = document.getElementById('cartItemCount');
                if (cartCountElement) {
                    cartCountElement.textContent = count;
                    cartCountElement.classList.toggle('d-none', count === 0);
                }
            } catch (error) {
                console.error('Error updating cart count:', error);
            }
        }

        // Update cart count after adding to cart
        document.addEventListener('DOMContentLoaded', () => {
            const addToCartForms = document.querySelectorAll('form[action*="AddToCart"]');
            addToCartForms.forEach(form => {
                form.addEventListener('submit', async (e) => {
                    e.preventDefault();

                    try {
                        const response = await fetch(form.action, {
                            method: 'POST',
                            body: new FormData(form)
                        });

                        if (response.ok) {
                            await updateCartCount();
                            // Redirect or handle success
                            window.location.href = form.getAttribute('data-return-url') || '@Url.Action("Index", "Home")';
                        }
                    } catch (error) {
                        console.error('Error adding to cart:', error);
                    }
                });
            });
        });
    </script>
    </body>
</html>
